buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'java'

version = '1.15.2-2.2.0.1'
group = 'yamahari.ilikewood'
archivesBaseName = 'ilikewood'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    mappings channel: 'snapshot', version: '20200222-1.15.1'

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            mods {
                ilikewood {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            mods {
                ilikewood {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            property 'ilikewood.datagen.modid', 'ilikewood'
            args '--mod', 'ilikewood', '--all', '--output', file('src/generated/resources/'), '--existing', file("src/main/resources")
            mods {
                ilikewood {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    flatDir {
        dirs 'build/libs'
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.15.2-31.1.0'

    compileOnly 'com.github.glitchfiend.biomesoplenty:BiomesOPlenty:1.15.2-10.0.0.345:api'
    runtimeOnly fg.deobf('com.github.glitchfiend.biomesoplenty:BiomesOPlenty:1.15.2-10.0.0.345:universal')
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    sourceSets.main.resources {
        exclude 'assets/biomesoplenty/**'
    }
    manifest {
        attributes([
                "Specification-Title"     : "ilikewood",
                "Specification-Vendor"    : "yamahari",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : "ilikewood",
                "Implementation-Version"  : "1.15.2-2.2.0.1",
                "Implementation-Vendor"   : "yamahari",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

def reobfFile = file("$buildDir/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) {
    type 'jar'
    builtBy 'reobfJar'
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact reobfArtifact
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}